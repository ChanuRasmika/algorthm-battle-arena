name: CI/CD - AlgorithmBattleArena

on:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Create .env file from GitHub Secrets
        run: |
          echo "DefaultConnection=${{ secrets.DEFAULT_CONNECTION }}" >> .env
          echo "TokenKey=${{ secrets.TOKEN_KEY }}" >> .env
          echo "PasswordKey=${{ secrets.PASSWORD_KEY }}" >> .env
          echo "AdminEmail=${{ secrets.ADMIN_EMAIL }}" >> .env
          echo "AdminPassword=${{ secrets.ADMIN_PASSWORD }}" >> .env
        shell: bash

      - name: Restore dependencies
        run: dotnet restore

      - name: Build project
        run: dotnet build --configuration Release --no-restore

      - name: Run unit tests
        env:
          PASSWORD_KEY: ${{ secrets.PASSWORD_KEY }}
          TOKEN_KEY: ${{ secrets.TOKEN_KEY }}
        run: |
          mkdir -p ./TestResults
          dotnet test AlgorithmBattleArena.Tests/AlgorithmBattleArena.Tests.csproj \
            --configuration Release \
            --logger "trx;LogFileName=test_results.trx" \
            --results-directory ./TestResults \
            -v minimal

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ./TestResults

      - name: Publish app
        if: github.ref == 'refs/heads/main'
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Upload artifact for deployment
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: .net-app

      - name: Ensure .env is not deployed
        run: rm -f .env

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'AlgorithmBattleArena'
          slot-name: 'Production'
          package: .
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_BD81C951B4754D6ABD5FD7AE9379497A }}
